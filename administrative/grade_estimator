#! /bin/bash

PARTICIPATION_SCORES=( )
  # The participation score can't be provided till the end of the semester
  # Via self-evaluation, you can define a value above. 
  # 
  # For example, if you believe you are slight above average in 
  #    1. attending class,
  #    1. asking questions, etc., in class,
  #    1. participating in Slack communications,
  #    1. providing feedback by the feedback system,
  #    1. turn in your assignments in on time,
  #    1. etc., 
  #
  # You could associate a score of 78% for your participation.
  # 
  #    PARTICIPATION_SCORE=( 78 )

# Syllabus Breakdown
PARTICIPATION_WEIGHT=0.15
LABORATORY_WEIGHT=0.40
QUIZ_WEIGHT=0.15
EXAM_WEIGHT=0.30


#####################################################################

dir_name=$(basename $(pwd) )
if [[ dir_name == 'deliverables' ]] ; then
  echo "You need to run this program from the 'deliverables' directory."
  exit 1
fi

function average () {

  value=0
  if (( $# == 0 )) ; then
    echo "0"
  else
    for ((i=1; i <= $#; i++)) ; do
      (( value += $(eval echo "\${${i}}") )) 
    done
    echo "$(( value / ( i - 1 ) ))"
  fi
}

# Algorithm:
#   1. source the default grades for deliverables that have not been assigned
#   1. source all the available "grade.report"s
#   1. collect individual scores into category scores
#      1. Participation Scores:
#         * we anticipate there will be no participation scores
#         * skip this step if the student provided a "guess"
#      1. Laboratory Scores:
#         * Section 1:  ASSIGNMENT_1[0-9]_total
#         * Section 2:  ASSIGNMENT_2[0-9]_total
#         * Section 3:  ASSIGNMENT_3[0-9]_total
#         * Section 4:  ASSIGNMENT_4[0-9]_total
#      1. Quiz Scores:
#         * Section 1:  ASSIGNMENT_10_total
#         * Section 2:  ASSIGNMENT_30_total
#      1. Exam Scores:
#         * Section 1:  ASSIGNMENT_20_total
#         * Section 2:  ASSIGNMENT_40_total
#   1. Calculate the average for each section
#   1. If Participation Score is undefined,
#      * prompt the user for "guess"
#      * if zero, then assign the value average of the other sections
#   1. Perform a weighted sum of all the sectional scores
#   1. Emit a report 

# Source the default grade assignment
if [[ -f grade_estimator.defaults ]] ; then
  source grade_estimator.defaults
fi

# Source each grade.report
while read _grade_report ; do
    source $_grade_report
done < <( find . -name grade.report -print )



# Collect the Participation Scores
if [[ -z "$PARTICIPATION_SCORES" ]] ; then
  PARTICIPATION_SCORES=( )
   for i in 1 2 3 4 5 6 7 8 9 ; do
     PARTICIPATION_SCORES+=( $( eval echo "\${ASSIGNMENTS_0${i}_total}" ) )  
   done
fi

# Collect the Laboratory Scores
LABORATORY_SCORES=( )
   for i in 1 2 3 4 5 6 7 8 9 ; do
     LABORATORY_SCORES+=( $( eval echo "\${ASSIGNMENTS_1${i}_total}" ) )
     LABORATORY_SCORES+=( $( eval echo "\${ASSIGNMENTS_2${i}_total}" ) )
     LABORATORY_SCORES+=( $( eval echo "\${ASSIGNMENTS_3${i}_total}" ) )
     LABORATORY_SCORES+=( $( eval echo "\${ASSIGNMENTS_4${i}_total}" ) )
   done

# Collect the Quiz and Exam scores
QUIZ_SCORES=( ${ASSIGNMENT_10_total} ${ASSIGNMENT_30_total} )
EXAM_SCORES=( ${ASSIGNMENT_20_total} ${ASSIGNMENT_40_total} )


# Calculate the Average in each section

# For Participation Average, there are several ways to compute the participation
# - if there are individual scores-- use them
# - if there is a assigned default -- use it
# - if the user is prompt for a value, and it is non zero, use it
# - otherwise assign the participation to the average of the other scores
if (( ${#PARTICIPATION_SCORES[@]} != 0 )) ; then 
   PARTICIPATION_AVERAGE=$(average "${PARTIPATION_SCORES[@]}")
   PARTICIPATION_CALCULATION=actual
elif [[ -n "${ASSIGNMENT_00_total}" ]] && (( ${ASSIGNMENT_00_total} != 0 )) ; then
   PARTICIPATION_AVERAGE=${ASSIGNMENT_00_total} 
   PARTICIPATION_CALCULATION=default
else
   echo "Based upon self-evaluation, enter your participation score."
   echo "Skip if you you want your participation score to be equal to the average of your other scores"
   read -p "Participation (0 .. 100): "  X
   PARTICIPATION_AVERAGE="$X"
   PARTICIPATION_CALCULATION=entered
fi
if (( ${PARTICIPATION_AVERAGE} == 0 )) ; then 
   PARTICIPATION_AVERAGE=$( average $LABORATORY_AVERAGE $QUIZ_AVERAGE $EXAM_AVERAGE )
   PARTICIPATION_CALCULATION=averaged
fi

LABORATORY_AVERAGE=$(average "${LABORATORY_SCORES[@]}")
QUIZ_AVERAGE=$(average "${QUIZ_SCORES[@]}")
EXAM_AVERAGE=$(average "${EXAM_SCORES[@]}")


# Syllabus Breakdown
PARTICIPATION_PERCENT=15
LABORATORY_PERCENT=40
QUIZ_PERCENT=15
EXAM_PERCENT=30

# Individual Calculation (Note integer division, hence some information loss)
PARTICIPATION_GP=$(( PARTICIPATION_AVERAGE * PARTICIPATION_PERCENT / 100 ))
LABORATORY_GP=$(( LABORATORY_AVERAGE * LABORATORY_PERCENT / 100 ))
QUIZ_GP=$(( QUIZ_AVERAGE * QUIZ_PERCENT / 100 ))
EXAM_GP=$(( EXAM_AVERAGE * EXAM_PERCENT / 100 ))


CURRENT_GP=$(( PARTIPICATION_GP + LABORATORY_GP  + QUIZ_GP + EXAM_GP  ))

# Consider making the output .md
cat <<EOF

  Based upon the current grading of deliverables, the following is
  the breakdown of your current grade.

  Note that this current grade is only an estimate.
  I.e. Past performance does not predict future performance.

                            Wieghted Average      Weight  Average
  Participation ($PARTICIPATION_CALCULATION):  ${PARTICIPATION_GP}     ${PARTICIPATION_PERCENT}%      ${PARTICIPATION_AVERAGE}
  Laboratory Assignments:   ${LABORATORY_GP}      ${LABORATORY_PERCENT}%     ${LABORATORY_AVERAGE}	
  Quizzes (2):              ${QUIZ_GP}      ${QUIZ_PERCENT}%      ${QUIZ_AVERAGE}
  Exams (2):                ${EXAM_GP}      ${EXAM_PERCENT}%      ${EXAM_AVERAGE}
  ----------                -------------
  Weighted Total:           ${CURRENT_GP}


EOF



# If .md, provide a break down of each section